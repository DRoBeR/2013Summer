package me.xiangchen.app.duetstudy;

import java.util.Calendar;

import me.xiangchen.technique.handsense.xacHandSenseFeatureMaker;
import android.content.Context;
import android.view.MotionEvent;

public class Handedness extends TechniqueShell {
	
	long timeTouchDown;
	int handedness;
	
	public Handedness(Context context) {
		super(context);
		technique = HANDEDNESS;
		
		numClasses = 2;
		classLabels = new int[] { xacHandSenseFeatureMaker.WATCH,
				xacHandSenseFeatureMaker.NOWATCH };
		numTrialsPerBlock = numClasses * numDataPointsPerClass / numBlocks;

		labelCounter = new int[numClasses];
		radii = new float[numClasses];
		for (int i = 0; i < numClasses; i++) {
			labelCounter[i] = 0;
			radii[i] = 1;
		}
		
//		tvCue.setLines(3);
//		tvCue.setHeight(tvCue.getHeight() * 3);
		tvStatus.setText("Handedness");
	}

	@Override
	public boolean doTouch(MotionEvent event) {
		isTouching = true;
		int action = event.getAction();
		long curTime = Calendar.getInstance().getTimeInMillis();
		
		if (!isBreak) {
			if (isStarted) {
				switch (action) {
				case MotionEvent.ACTION_DOWN:
					handedness = xacHandSenseFeatureMaker.UNKNOWN;
					timeTouchDown = curTime;
					break;
				case MotionEvent.ACTION_MOVE:
					if (curTime - timeTouchDown < xacHandSenseFeatureMaker.TOUCHONSETTIME) {
						break;
					}

					if (handedness == xacHandSenseFeatureMaker.UNKNOWN && xacHandSenseFeatureMaker.isDataReady()) {
						handedness = xacHandSenseFeatureMaker.calculateHandedness();
						xacHandSenseFeatureMaker.setLabels(label, handedness);
						xacHandSenseFeatureMaker.sendOffData();
						xacHandSenseFeatureMaker.clearData();
						isReadyForNextTrial = false;
						tvCue.setText("Release");
						trial++;
					}
					break;
				case MotionEvent.ACTION_UP:
					break;
				}
			}
			
			if (action == MotionEvent.ACTION_UP) {
				if (isStarted) {
					if (trial == numTrialsPerBlock) {
						block++;
						isBreak = true;
						if (block == numBlocks) {
							tvCue.setTextColor(0xFFFFFFFF);
							tvCue.setText("End of technique");
						} else {
							tvCue.setTextColor(0xFFFFFFFF);
							tvCue.setText("End of block");
						}
					} else {
						tvCue.setText("Please wait ...");
					}					
				} else {
					isStarted = true;
					block = 0;
					trial = 0;
				}
				
				xacHandSenseFeatureMaker.clearData();
				isReadyForNextTrial = false;
				isTouching = false;
			}
		}
		return true;
	}
	
	@Override
	public void runOnTimer() {
		if (!isBreak && !isTouching) {
			if (!xacHandSenseFeatureMaker.isDataReady()) {
				tvCue.setText("Please wait ...");
				isReadyForNextTrial = false;
				// Log.d(LOGTAG, "wait...");
			} else {
				if (!isReadyForNextTrial) {
					if (isStarted) {
						label = nextClassLabel(false);
						setCues();
						setStatus();
					} else {
						tvCue.setText("Tap to start...");
					}

					isReadyForNextTrial = true;
					// Log.d(LOGTAG, "ready");
				}
			}
		}
	}
	
	@Override
	protected void setCues() {
		super.setCues();
		String strCue = "";
		switch (label) {
		case xacHandSenseFeatureMaker.WATCH:
			strCue = "Swipe all the way up with\nLeft\nHand";
			tvCue.setText(strCue);
			break;
		case xacHandSenseFeatureMaker.NOWATCH:
			strCue = "Swipe all the way up with\nRight\nHand";
			tvCue.setText(strCue);
			break;
		}
	}
}
