package me.xiangchen.app.duetstudy;

import java.util.Random;

import android.content.Context;
import android.graphics.Typeface;
import android.view.Gravity;
import android.view.KeyEvent;
import android.view.MotionEvent;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

public class TechniqueShell extends ViewGroup {

	public final static Random random = new Random();
	public final static int TEXTWIDTH = 480;
	public final static int TEXTHEIGHT = 240;
	public final static int FONTSIZE = 32;
	public final static int FLIPANDTAP = 0;
	
	protected TextView textView;
	
	protected int numBlocks;
	protected int numTrialsPerBlock;
	
	protected int technique;
	
	protected int block;
	protected int trial;
	
	public TechniqueShell(Context context) {
		super(context);
		this.setBackgroundColor(0xFF000000);
		textView = new TextView(context);
		textView.layout(0, 0, TEXTWIDTH, TEXTHEIGHT);
		textView.setTextSize(FONTSIZE);
		textView.setText("Technique");
		textView.setTypeface(Typeface.createFromAsset(context.getAssets(), "fonts/HelveticaBQ-Light.otf"));
		textView.setGravity(Gravity.CENTER_VERTICAL | Gravity.CENTER_HORIZONTAL);
		this.addView(textView);
	}
	
//	@Override
//	protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
//		super.onMeasure(widthMeasureSpec, heightMeasureSpec);
//		int width = MeasureSpec.getSize(widthMeasureSpec);
//		int height = MeasureSpec.getSize(heightMeasureSpec);
//
//		setMeasuredDimension(width, height);
//	}
	
	public boolean doTouch(MotionEvent event) {
		int action = event.getAction();
		switch(action) {
		case MotionEvent.ACTION_DOWN:
			break;
		case MotionEvent.ACTION_MOVE:
			break;
		case MotionEvent.ACTION_UP:
			break;
		}
		
		return false;
	}
	
	public void doKeyDown(int keyCode, KeyEvent event) {
		
	}
	
	public void sendData() {
		
	}

	@Override
	protected void onLayout(boolean changed, int l, int t, int r, int b) {
		int numChildren = this.getChildCount();
		for (int i = 0; i < numChildren; i++) {
			final View child = this.getChildAt(i);
			
			int wChild = child.getWidth();//child.getMeasuredWidth();
			int hChild = child.getHeight();//child.getMeasuredHeight();

			int lChild = (int) (l + ((r - l) - wChild) / 2.618);
			int tChild = (int) (t + ((b - t) - hChild) * 1.618 / 2.618);
			child.layout(lChild, tChild, lChild + wChild, tChild + hChild);
		}
		
	}

}
