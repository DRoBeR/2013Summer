package me.xiangchen.app.duettech;

import me.xiangchen.app.duetos.LauncherManager;
import me.xiangchen.technique.doubleflip.xacAuthenticSenseFeatureMaker;
import me.xiangchen.technique.handsense.xacHandSenseFeatureMaker;
import me.xiangchen.technique.touchsense.xacTouchSenseFeatureMaker;

import com.sonyericsson.extras.liveware.aef.sensor.Sensor;
import com.sonyericsson.extras.liveware.extension.util.control.ControlExtension;
import com.sonyericsson.extras.liveware.extension.util.sensor.AccessorySensor;
import com.sonyericsson.extras.liveware.extension.util.sensor.AccessorySensorEvent;
import com.sonyericsson.extras.liveware.extension.util.sensor.AccessorySensorEventListener;
import com.sonyericsson.extras.liveware.extension.util.sensor.AccessorySensorManager;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Color;
import android.view.Gravity;
import android.widget.RelativeLayout;
import android.widget.TextView;

public class DuetTechExtension extends ControlExtension{

	public final static int WATCHACCELFPS = 10;
	
	int width;
	int height;
	
	RelativeLayout layout;
	Canvas canvas;
	Bitmap bitmap;
	TextView textView;
	
	AccessorySensor sensor = null;
	AccessorySensorEventListener listener;
	
	public DuetTechExtension(Context context, String hostAppPackageName) {
		super(context, hostAppPackageName);
		
		width = getSupportedControlWidth(context);
		height = getSupportedControlHeight(context);
		
		layout = new RelativeLayout(context);
		textView = new TextView(context);
		textView.setText("Duet tech");
		textView.setTextSize(9);
		textView.setGravity(Gravity.CENTER);
		textView.setTextColor(Color.WHITE);
		textView.layout(0, 0, width, height);
		layout.addView(textView);
		
		AccessorySensorManager manager = new AccessorySensorManager(context,
				hostAppPackageName);
		sensor = manager.getSensor(Sensor.SENSOR_TYPE_ACCELEROMETER);

		listener = new AccessorySensorEventListener() {

			public void onSensorEvent(AccessorySensorEvent sensorEvent) {
				float[] values = sensorEvent.getSensorValues();	
					xacHandSenseFeatureMaker.updateWatchAccel(values);
					xacHandSenseFeatureMaker.addWatchFeatureEntry();
					
					xacTouchSenseFeatureMaker.updateWatchAccel(values);
					xacTouchSenseFeatureMaker.addWatchFeatureEntry();
					
					xacAuthenticSenseFeatureMaker.updateWatchAccel(values);
					xacAuthenticSenseFeatureMaker.addWatchFeatureEntry();
				
			}
		};
	}
	
	@Override
	public void onResume() {
		updateVisual();
	}

	private void updateVisual() {

		bitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);
		canvas = new Canvas(bitmap);
		layout.draw(canvas);

		showBitmap(bitmap);
	}
	
	public static int getSupportedControlWidth(Context context) {
		return context.getResources().getDimensionPixelSize(
				R.dimen.smart_watch_control_width);
	}

	public static int getSupportedControlHeight(Context context) {
		return context.getResources().getDimensionPixelSize(
				R.dimen.smart_watch_control_height);
	}
}
