package me.xiangchen.app.duetstudy;

import java.util.Calendar;

import me.xiangchen.lib.xacPhoneGesture;
import me.xiangchen.technique.flipsense.xacFlipSenseFeatureMaker;
import me.xiangchen.technique.tiltsense.xacTiltSenseFeatureMaker;
import android.content.Context;
import android.util.Log;
import android.view.MotionEvent;

public class WristTilt extends TechniqueShell {

	public static final int TILTTIMEOUT = 1500;
	xacPhoneGesture pressAndHold;
	long timeFromHold;
	boolean isTouching = false;

	public WristTilt(Context context) {
		super(context);

		numClasses = 2;
		classLabels = new int[] { xacTiltSenseFeatureMaker.NONE,
				xacTiltSenseFeatureMaker.TILTOUT };
		int numDataPointsPerClass = 10;
		numBlocks = 5;
		numTrialsPerBlock = numClasses * numDataPointsPerClass / numBlocks;

		labelCounter = new int[numClasses];
		radii = new float[numClasses];
		for (int i = 0; i < numClasses; i++) {
			labelCounter[i] = 0;
			radii[i] = 1;
		}

		pressAndHold = new xacPhoneGesture(xacPhoneGesture.PRESSANDHOLD);

		tvStatus.setText("Wrist tilting");
	}

	@Override
	public boolean doTouch(MotionEvent event) {

		if (!isBreak && isReadyForNextTrial) {
			long curTime = Calendar.getInstance().getTimeInMillis();
			int action = event.getAction();
			switch (action) {
			case MotionEvent.ACTION_DOWN:
				pressAndHold.update(event);
				timeFromHold = -1;
				isTouching = true;
				break;
			case MotionEvent.ACTION_MOVE:
				if (pressAndHold.getResult() != pressAndHold.YES) {
					pressAndHold.update(event);
				} else {
					if (timeFromHold < 0) {
						label = nextClassLabel();
						setCues();
						timeFromHold = curTime;
					} else {
						if (curTime - timeFromHold > TILTTIMEOUT) {
							tvCue.setText("Release");
						}
					}
				}
				break;
			case MotionEvent.ACTION_UP:
				isTouching = false;
				break;
			}
			xacFlipSenseFeatureMaker.clearData();
			isReadyForNextTrial = false;
			return true;
		} else {
			isStarted = true;
			block = 0;
			trial = 0;
			return false;
		}

	}

	@Override
	public void runOnTimer() {
		if (!isBreak && !isTouching) {
			if (!xacTiltSenseFeatureMaker.isDataReady()) {
				tvCue.setText("Please wait ...");
				isReadyForNextTrial = false;
				Log.d(LOGTAG, "wait...");
			} else {
				if (!isReadyForNextTrial) {
					if (isStarted) {
						label = nextClassLabel();
						tvCue.setText("Hold");
						setStatus();
					} else {
						tvCue.setText("Tap to start...");
					}

					isReadyForNextTrial = true;
					Log.d(LOGTAG, "ready");
				}
			}
		}
	}

	@Override
	protected void setCues() {
		switch (label) {
		case xacTiltSenseFeatureMaker.NONE:
			tvCue.setText("Tilt the wrist");
			break;
		case xacTiltSenseFeatureMaker.TILTOUT:
			tvCue.setText("Keep holding");
			break;
		}
	}

}
