package me.xiangchen.ui;

import java.util.ArrayList;
import java.util.Hashtable;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Paint;
import android.graphics.Path;
import android.graphics.RectF;
import android.view.View;

public class xacBufferCanvas extends View {

	public static final String LOGTAG = "DuetOS";
	ArrayList<Path> paths;
	ArrayList<RectF> rectfs;
	Paint pathPaint;
	Paint rectPaint;
	Hashtable<Path, Paint> htPathPaint;

	public xacBufferCanvas(Context context) {
		super(context);
		paths = new ArrayList<Path>();
		rectfs = new ArrayList<RectF>();
		htPathPaint = new Hashtable<Path, Paint>();
	}

	public void setPathPaint(Paint p) {
		pathPaint = p;
	}

	public void setRectPaint(Paint p) {
		rectPaint = p;
	}

	public void addPath(Path path, Paint paint) {
		paths.add(path);
		Paint tmpPaint = new Paint();
		tmpPaint.setColor(paint.getColor());
		tmpPaint.setStrokeJoin(paint.getStrokeJoin());
		tmpPaint.setStrokeCap(paint.getStrokeCap());
		tmpPaint.setStrokeWidth(paint.getStrokeWidth());
		htPathPaint.put(path, tmpPaint);
	}

	public void addRect(RectF rectf) {
		rectfs.add(rectf);
	}

	public void clearRects() {
		rectfs.clear();
	}

	@Override
	public void onDraw(Canvas canvas) {
		super.onDraw(canvas);

		for (Path path : paths) {
			canvas.drawPath(path, pathPaint);
		}
	}

	@Override
	protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
		super.onMeasure(widthMeasureSpec, heightMeasureSpec);
		int width = MeasureSpec.getSize(widthMeasureSpec);
		int height = MeasureSpec.getSize(heightMeasureSpec);

		setMeasuredDimension(width, height);
	}

	@Override
	public void dispatchDraw(Canvas canvas) {
		super.dispatchDraw(canvas);
		// canvas.drawColor(Color.GREEN);
//		Log.d(LOGTAG, "redrawing...");
		for (Path path : paths) {
			canvas.drawPath(path, htPathPaint.get(path));
		}

		if (rectfs != null) {
			for (RectF rectf : rectfs) {
				canvas.drawRect(rectf, rectPaint);
			}
		}
	}
}
