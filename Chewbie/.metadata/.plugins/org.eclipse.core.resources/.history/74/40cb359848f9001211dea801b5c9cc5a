package me.xiangchen.app.duetstudy;

import java.util.Random;

import android.content.Context;
import android.graphics.Paint;
import android.graphics.Rect;
import android.graphics.Typeface;
import android.view.Gravity;
import android.view.KeyEvent;
import android.view.MotionEvent;
import android.view.ViewGroup;
import android.widget.TextView;

public class TechniqueShell extends ViewGroup {

	public final static String LOGTAG = "DuetTech";
	public final static Random random = new Random();
	public final int UNKNOWN = -1;
	public final static int LARGENUMBER = 65535;
	public final static int TEXTWIDTH = 480;
	public final static int TEXTHEIGHT = 240;
	public final static int FONTSIZE = 32;
	public final static int FLIPANDTAP = 0;
	
	protected TextView textView;
	protected int numClasses;
	protected int numBlocks;
	protected int numTrialsPerBlock;
	
	protected int technique;
	
	protected int trialCounter = 0;
	protected int block;
	protected int trial;
	
	protected int label = UNKNOWN;
	protected int[] classLabels;
	protected int[] labelCounter;
	protected float[] radii;
	
//	RelativeLayout layout;
	
	public TechniqueShell(Context context) {
		super(context);
		this.setBackgroundColor(0xFF000000);
		
//		layout = new RelativeLayout(context);
//		layout.setBackgroundColor(0xFFFF0000);
		
		textView = new TextView(context);
		textView.setTextSize(FONTSIZE);
		textView.setText("Technique");
		textView.setTypeface(Typeface.createFromAsset(context.getAssets(), "fonts/HelveticaBQ-Light.otf"));
		textView.setGravity(Gravity.CENTER_VERTICAL | Gravity.CENTER_HORIZONTAL);
		
		this.addView(textView);
	}
	
	public boolean doTouch(MotionEvent event) {
		int action = event.getAction();
		switch(action) {
		case MotionEvent.ACTION_DOWN:
			break;
		case MotionEvent.ACTION_MOVE:
			break;
		case MotionEvent.ACTION_UP:
			break;
		}
		
		return false;
	}
	
	public void doKeyDown(int keyCode, KeyEvent event) {
		
	}
	
	public void sendData() {
		
	}

	@Override
	protected void onLayout(boolean changed, int l, int t, int r, int b) {
		int widthTextView = getTextWidth(textView);//.getMeasuredWidth();
		int heightTextView = (int) (getTextHeight(textView) * 1.5f);//.getMeasuredHeight();
		int leftTextView = l + ((r - l) - widthTextView) / 2;
		int topTextView = t + ((b - t) - heightTextView) / 2; 
		textView.layout(leftTextView, topTextView, leftTextView + widthTextView, topTextView + heightTextView);

	}
	
	protected void showCues(String text) {
		
	}
	
	protected int getTextWidth(TextView tv) {
		Rect bounds = new Rect();
		Paint textPaint = textView.getPaint();
		textPaint.getTextBounds((String) tv.getText(), 0, tv.getText().length(), bounds);
		return bounds.width();
	}
	
	protected int getTextHeight(TextView tv) {
		Rect bounds = new Rect();
		Paint textPaint = textView.getPaint();
		textPaint.getTextBounds((String) tv.getText(), 0, tv.getText().length(), bounds);
		return bounds.height();
	}
	
	protected int nextClassLabel() {
		int randNum = random.nextInt(LARGENUMBER) % numClasses;
		int retLabel = UNKNOWN;
		for(int i=0, start=0; i<numClasses; i++) {
			if(start <= randNum && randNum < start + radii[i]) {
				retLabel = classLabels[i];
				labelCounter[i]++;
				break;
			}
			start += radii[i];
		}
		
		trialCounter++;
		for(int i=0; i<numClasses; i++) {
			radii[i] = (trialCounter - labelCounter[i]) * numClasses * 1.0f / trialCounter;
		}
		
		return retLabel;
	}

}
