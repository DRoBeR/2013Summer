package me.xiangchen.app.duetapp.map;

import me.xiangchen.app.duetapp.AppManager;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.view.View;
import android.view.View.MeasureSpec;

public class MapManager extends AppManager {

	private final static float HORISHIFT = 0.50f;
	private final static float VERTSHIFT = 0.50f;
	private static Map phone = null;
	private static MapExtension watch = null;

	public static void setPhone(Map p) {
		phone = p;
	}

	public static void setWatch(MapExtension w) {
		watch = w;
	}
	

	public static void shift(View view, float x, float y, int cropWidth,
			int cropHeight) {
		if (watch != null) {
			Bitmap bitmap = loadBitmapFromView(view);
			int cx = (int) (x - cropWidth * HORISHIFT);
			int cy = (int) (y - cropHeight * VERTSHIFT);
			cx = Math.max(cx, 0);
			cx = Math.min(cx, bitmap.getWidth());
			cy = Math.max(cy, 0);
			cy = Math.min(cy, bitmap.getHeight());

			try {
				Bitmap croppedBitmap = Bitmap.createBitmap(bitmap, cx, cy,
						cropWidth, cropHeight);

				updateWatchVisual(croppedBitmap, true);
			} catch (Exception e) {

			}
			
			view.destroyDrawingCache();
		}
	}

	private static Bitmap getScreenShot(View view) {
		
		view.setDrawingCacheEnabled(true);
//
//		// this is the important code :)  
//		// Without it the view will have a dimension of 0,0 and the bitmap will be null          
//		view.measure(MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED), 
//		            MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED));
//		view.layout(0, 0, view.getMeasuredWidth(), view.getMeasuredHeight()); 
//
//		view.buildDrawingCache(true);
		
		int w = view.getWidth();
		Bitmap bmp = view.getDrawingCache();
		Bitmap bitmap = Bitmap.createBitmap(bmp);
		view.setDrawingCacheEnabled(false);
		view.destroyDrawingCache();
		return bitmap;
	}
	
	public static Bitmap loadBitmapFromView(View v) {
	     Bitmap b = Bitmap.createBitmap( v.getWidth(), v.getHeight(), Bitmap.Config.ARGB_8888);                
	     Canvas c = new Canvas(b);
	     v.layout(0, 0, v.getLayoutParams().width, v.getLayoutParams().height);
	     v.draw(c);
	     return b;
	}

	public static void doSelection(float xRatio, float yRatio) {
		phone.doSelection(xRatio, yRatio);
	}
	
	public static void doTranslation(float dx, float dy) {
		phone.doTranslation(dx, dy);
	}
	
	public static void switchMapViews() {
		phone.swtichMapView();
	}
}
