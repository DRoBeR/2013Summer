package me.xiangchen.app.duetstudy;

import me.xiangchen.app.duetapp.email.EmailManager;
import me.xiangchen.app.duetos.DuetTechManager;
import android.content.Context;
import android.view.MotionEvent;
import android.view.MotionEvent.PointerCoords;

public class MultiDeviceGesture extends TechniqueShell {

	public final static int PINCHOPEN = 0;
	public final static int PINCHCLOSE = 1;
	public final static int PHONETOWATCH = 2;
	public final static int WATCHTOPHONE = 3;
	
	public final static int SWIPEOPEN = 0;
	public final static int SWIPECLOSE = 1;
	
	public final static float TAPTHRS = 200;
	
	float distX;
	float distY;

	float xPrev;
	float yPrev;

	float xTouchDown;
	float yTouchDown;
	
	public MultiDeviceGesture(Context context) {
		super(context);
		technique = MULTIDEVICEGESTURE;
		
		numClasses = 4;
		classLabels = new int[] {PINCHOPEN, PINCHCLOSE, PHONETOWATCH, WATCHTOPHONE};
		numTrialsPerBlock = numClasses * numDataPointsPerClass / numBlocks;
		
		labelCounter = new int[numClasses];
		radii = new float[numClasses];
		for(int i=0; i<numClasses; i++) {
			labelCounter[i] = 0;
			radii[i] = 1;
		}
		
		tvStatus.setText("Multi-device gesture");
	}

	@Override
	public boolean doTouch(MotionEvent event) {
		int action = event.getAction();
		PointerCoords curCoord = new PointerCoords();
		event.getPointerCoords(0, curCoord);
		switch(action) {
		case MotionEvent.ACTION_DOWN:
			distX = 0;
			distY = 0;
			xTouchDown = curCoord.x;
			yTouchDown = curCoord.y;
			break;
		case MotionEvent.ACTION_MOVE:
			distX += Math.abs(curCoord.x - xPrev);
			distY += Math.abs(curCoord.y - yPrev);
			break;
		case MotionEvent.ACTION_UP:
			if (Math.max(distX, distY) > TAPTHRS) {
			if (curCoord.x < xTouchDown && curCoord.y > yTouchDown) {
				// Log.d(LOGTAG, "swipe close");
				DuetTechManager.updatePhoneGesture(EmailManager.SWIPECLOSE,
						curTime);
			} else if (curCoord.x > xTouchDown && curCoord.y < yTouchDown) {
				// Log.d(LOGTAG, "swipe open");
				DuetTechManager.updatePhoneGesture(EmailManager.SWIPEOPEN,
						curTime);
			}
			}
			break;
		}
		
		xPrev = curCoord.x;
		yPrev = curCoord.y;
		return true;
	}
}
